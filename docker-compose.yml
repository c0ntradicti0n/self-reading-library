version: "3"
services:
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: unless-stopped
    depends_on:
      - be
      - dash
      - fe
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites-enabled/:/etc/nginx/sites-enabled/
      - ./react/layout_viewer_made/.next/:/next/.next/
      - "$CWD/python/.layouteagle/pdfs/:/pdfs"
      - "$CWD/python/.layouteagle/audio/:/audio"


  be:
    build: python
    container_name: be

    tty: true
    user: $USER_IDS
    ports:
      - "${PORT}:${PORT}"
      - "2222:22"
    environment:
      PORT: $PORT
      DB_HOST: db
      LC_ALL: en_US.UTF-8
      LANG: en_US.UTF-8
      LANGUAGE: en_US.UTF-8

    volumes:
      - "$CWD/python:/home/finn/Programming/self-reading-library/python"
    entrypoint: uwsgi  --py-autoreload=1 --http 0.0.0.0:$PORT --module wsgi:application --memory-report  --workers 16 --threads 2  --memory-report --enable-threads --skip-atexit-teardown --max-worker-lifetime=1000 --max-worker-lifetime-delta=2000 --harakiri=3000
  dash:
    build: python
    container_name: dash

    tty: true
    user: $USER_IDS
    ports:
      - "54321:12345"
      - "22222:22"
    environment:
      PORT: 12345
      DB_HOST: db
      BASE_URL: "/dash/"
    volumes:
      - "$CWD/python:/home/finn/Programming/self-reading-library/python"
    entrypoint: uwsgi  --py-autoreload=1 --http 0.0.0.0:12345 --module dash_wsgi:application --memory-report  --workers 16 --threads 2  --memory-report --enable-threads --skip-atexit-teardown --max-worker-lifetime=1000 --max-worker-lifetime-delta=2000 --harakiri=3000

  fill:
    build: python
    container_name: fill
    tty: true
    environment:
      DB_HOST: db
    volumes:
      - "$CWD/python:/home/finn/Programming/self-reading-library/python"
    entrypoint: python3 fill.py

  tiger:
    container_name: tiger
    image:  docker.tigergraph.com/tigergraph:latest
    restart: unless-stopped
    user: $USER_IDS


    ports:
      - '9000:9000'
      - '14240:14240'
      - '8123:8123'

    ulimits:
      nofile:
        soft: 1000000
        hard: 1000000

    volumes:
      - ./tigergraph/data:/home/tigergraph//data/
      - ./tigergraph/scripts:/home/tigergraph//scripts
      - ./tigergraph/start.sh:/home/tigergraph/start.sh

    working_dir: /home/tigergraph

    stdin_open: true
    tty: true
    entrypoint: bash -i start.sh

  db:
    image: postgres
    container_name: db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: "db"
      POSTGRES_HOST_AUTH_METHOD: "trust"
      POSTGRES_USER: python
      POSTGRES_PASSWORD: password
      POSTGRES_HOST: "localhost"
      CREATE_FRONTEND: "True"
    restart: "unless-stopped"
  fe:
    build:
      context: react
      dockerfile: Dockerfile.${ENV}
      args:
        NEXT_PUBLIC_FRONTEND_HOST: ${FRONTEND_HOST}
        NEXT_PUBLIC_BACKEND_HOST: "/api"
        NEXT_PUBLIC_DASH_HOST: "/dash"
    container_name: fe
    ports:
      - "3210:3000"
    tty: true
    volumes:

      - "$CWD/react/layout_viewer_made/config:/app/config"
      - "$CWD/react/layout_viewer_made/public:/app/public"
      - "$CWD/react/layout_viewer_made/pages:/app/pages"
      - "$CWD/react/layout_viewer_made/spec:/app/spec"
      - "$CWD/react/layout_viewer_made/src:/app/src"

    environment:
      PORT: 3000
      NEXT_PUBLIC_FRONTEND_HOST: ${FRONTEND_HOST}
      NEXT_PUBLIC_BACKEND_HOST: "/api"
      NEXT_PUBLIC_DASH_HOST: "/dash"





