version: "3"
services:
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: unless-stopped
    depends_on:
      - be
      - fe
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites-enabled/:/etc/nginx/sites-enabled/
      - ./react/layout_viewer_made/.next/:/next/.next/
      - "$CWD/python/.layouteagle/pdfs/:/pdfs"
      - "$CWD/python/.layouteagle/audio/:/audio"


  be:
    image: full_python

    build: python
    container_name: be

    tty: true
    user: $USER_IDS
    ports:
      - "${PORT}:${PORT}"
      - "2222:22"
    environment:
      PORT: $PORT
      DB_HOST: db
      LC_ALL: en_US.UTF-8
      LANG: en_US.UTF-8
      LANGUAGE: en_US.UTF-8
      GDB_USER: ich
      GDB_PASSWORD: ${GDB_PASSWORD}
      GDB_HOST: gdb


    volumes:
      - "$CWD/python:/home/finn/Programming/self-reading-library/python"
    entrypoint: uwsgi  --py-autoreload=1 --http 0.0.0.0:$PORT --module wsgi:application --memory-report  --workers 1 --threads 16  --memory-report --enable-threads --skip-atexit-teardown --max-worker-lifetime=1000 --max-worker-lifetime-delta=2000 --harakiri=3000 -b 32768

  fill:
    build: python
    container_name: fill
    tty: true
    environment:
      DB_HOST: db
      GDB_PASSWORD: ${GDB_PASSWORD}
      GDB_HOST: gdb

    volumes:
      - "$CWD/python:/home/finn/Programming/self-reading-library/python"
    entrypoint: python3 fill.py



  db:
    image: postgres
    container_name: db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: "db"
      POSTGRES_HOST_AUTH_METHOD: "trust"
      POSTGRES_USER: python
      POSTGRES_PASSWORD: password
      POSTGRES_HOST: "localhost"
      CREATE_FRONTEND: "True"
    restart: "unless-stopped"

  gdb:
    image: franzinc/agraph
    container_name: gdb
    restart: unless-stopped
    shm_size: 3g
    environment:
      AGRAPH_SUPER_USER: ich
      AGRAPH_SUPER_PASSWORD: ${GDB_PASSWORD}
    ports:
      - 10000-10035:10000-10035
    #volumes:
    #  - "$CWD/gdb/data:/agraph/data"
    #  - "$CWD/gdb/etc:/agraph/etc"
  fe:
    build:
      context: react
      dockerfile: Dockerfile.${ENV}
      args:
        NEXT_PUBLIC_FRONTEND_HOST: ${FRONTEND_HOST}
        NEXT_PUBLIC_BACKEND_HOST: "/api"
        NEXT_PUBLIC_DASH_HOST: "/dash"
    container_name: fe
    ports:
      - "3210:3000"
    tty: true
    volumes:

      - "$CWD/react/layout_viewer_made/config:/app/config"
      - "$CWD/react/layout_viewer_made/public:/app/public"
      - "$CWD/react/layout_viewer_made/pages:/app/pages"
      - "$CWD/react/layout_viewer_made/spec:/app/spec"
      - "$CWD/react/layout_viewer_made/src:/app/src"

    environment:
      PORT: 3000
      NEXT_PUBLIC_FRONTEND_HOST: ${FRONTEND_HOST}
      NEXT_PUBLIC_BACKEND_HOST: "/api"
      NEXT_PUBLIC_DASH_HOST: "/dash"





