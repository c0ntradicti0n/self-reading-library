
name: Deploy to VM staging

on:
  push:
    branches:
      - master

permissions:
  contents: read


concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/staging.key
          chmod 600 ~/.ssh/staging.key
          cat >>~/.ssh/config <<END
          Host staging
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/staging.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.STAGING_SSH_USER }}
          SSH_KEY: ${{ secrets.STAGING_SSH_KEY }}
          SSH_HOST: ${{ secrets.STAGING_SSH_HOST }}


      - name: Deploy
        env:
          SSH_HOST: ${{ secrets.STAGING_SSH_HOST }}
        run: |
          ssh staging "
              set -x
              killall screen
              rm -rf *.log
              rm -rf ./cache
              cp -R ./LayoutEagle/python/.layouteagle ./cache
              kill -9 $(lsof -t -i:9999) || echo 'backend not running'
              sudo umount LayoutEagle/react/layout_viewer_made/public/pdfs | echo 'already unmounted'
              rm -rf LayoutEagle
              git clone https://github.com/c0ntradicti0n/LayoutEagle.git 
                        
              python3 -m venv venv
              . venv/bin/activate
          
              [[ ! -d ./models ]] && mkdir models && cd models && wget https://s3-us-west-2.amazonaws.com/allennlp/models/elmo/2x4096_512_2048cnn_2xhighway/elmo_2x4096_512_2048cnn_2xhighway_options.json && wget https://s3-us-west-2.amazonaws.com/allennlp/models/elmo/2x4096_512_2048cnn_2xhighway/elmo_2x4096_512_2048cnn_2xhighway_weights.hdf5 && cd ..
              ln -s /home/deploy/models/ /home/deploy/LayoutEagle/python/language/transformer/models

              cd LayoutEagle
          
              mkdir python/.layouteagle
              mkdir python/.layouteagle/pdfs || echo 'exists'

          
              tar -xf ~/arXiv_pdf_9912_002.tar -C python/.layouteagle/pdfs 

              cp -R --no-clobber ../minimal_cache/. python/.layouteagle/

              cp -R --no-clobber ~/cache/. python/.layouteagle/
              
              mkdir python/.layouteagle/cache || echo 'exists'
            

              mkdir python/.layouteagle/prediction
              ls python/.layouteagle/

              pip install wheel
              pip install torch
              pip install numpy --upgrade
              python -m spacy download en_core_web_trf
          
              cp python/tokenization_layoutvm2_fast.py ../venv/lib/python3.8/site-packages/transformers/models/layoutlmv2/tokenization_layoutlmv2_fast.py
              
              echo \" export class AppSettings {  public static BACKEND_HOST = 'http://$SSH_HOST:9999'   } \" > react/layout_viewer/config/connection.ts
              echo \"PORT=9999\" >> python/core/config.py
              kill -9 $(lsof -t -i:9999)
          "

      - name: InstallTtts
        run: |
            ssh staging '   
                if [[ ! -d ./tts ]] ; then
                  git clone https://github.com/c0ntradicti0n/tts.git
                  cd tts 
                  python3 -m venv venv
                  . venv/bin/activate
                  pip install -r requirements.txt
                fi
            '
      - name: StartBackend
        run: |
          ssh staging '   screen -L  -Logfile backend.log -S backend -dm bash -c " . venv/bin/activate; cd LayoutEagle/python; uwsgi --http 0.0.0.0:9999 --module wsgi:application --threads 10 "  &  '
          
      - name: StartFrontend
        run: |
          ssh staging '  sleep 110;  screen  -L  -Logfile frontend.log -S frontend -dm bash -c " cd LayoutEagle/react/layout_viewer_made/ ; yarn install; yarn add --dev typescript @types/node; yarn build; yarn run next export ; export PUBLIC_URL=self-reading-library.science;  yarn run start -p 3000 "   &  '

      - name: StartMountLink
        run: |
          ssh staging '    screen  -L  -Logfile mount.log -S frontend -dm bash -c "   [[ ! -d LayoutEagle/react/layout_viewer_made/public/pdfs ]] && mkdir LayoutEagle/react/layout_viewer/public/pdfs &&  sudo mount --bind LayoutEagle/python/.layouteagle/pdfs/ LayoutEagle/react/layout_viewer/public/pdfs || echo mount_exists "   &  '
      - name: Glance at backend logs
        run: |
          ssh staging '              set -x ;  cat backend.log     '

      - name: Glance at frontend logs
        run: |
          ssh staging '              set -x;  cat frontend.log     '


      - name: DocTest
        run: |
          ssh staging '        
              screen -S fullend -dm bash -c "cd fullend/LayoutEagle/python; pip install -U pytest; pytest --doctest-modules"
          '
      - name: RestTest
        run: |
          echo $(curl http://$SSH_HOST:80) 
          echo $(curl -k https://$SSH_HOST:9999)