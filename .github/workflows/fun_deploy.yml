
name: Deploy to VM staging

on:
  push:
    branches:
      - master

permissions:
  contents: read


concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/staging.key
          chmod 600 ~/.ssh/staging.key
          cat >>~/.ssh/config <<END
          Host staging
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/staging.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.STAGING_SSH_USER }}
          SSH_KEY: ${{ secrets.STAGING_SSH_KEY }}
          SSH_HOST: ${{ secrets.STAGING_SSH_HOST }}

      - name: Deploy
        run: |
          ssh staging '
              set -x
              killall screen
              rm -rf *.log
              rm -rf ./cache
              cp -r ./LayoutEagle/python/.layouteagle ./cache
              rm -rf LayoutEagle
              git clone https://github.com/c0ntradicti0n/LayoutEagle.git 
          
              #mkdir LayoutEagle/python/.layouteagle/collection
              
              python3 -m venv venv
              . venv/bin/activate
          
              [[ ! -d ./models ]] && mkdir models && cd models && wget https://s3-us-west-2.amazonaws.com/allennlp/models/elmo/2x4096_512_2048cnn_2xhighway/elmo_2x4096_512_2048cnn_2xhighway_options.json && wget https://s3-us-west-2.amazonaws.com/allennlp/models/elmo/2x4096_512_2048cnn_2xhighway/elmo_2x4096_512_2048cnn_2xhighway_weights.hdf5 && cd ..
              ln -s /home/deploy/models/ /home/deploy/LayoutEagle/python/language/transformer/models

              cd LayoutEagle
          
              mkdir python/.layouteagle
              mkdir python/.layouteagle/text_data
              mkdir python/.layouteagle/cache


              cp -R ~/../cloud/minimal_cache/. python/.layouteagle/
              cp -R  ./cache/text_data/. ./LayoutEagle/python/.layouteagle/tex_data/
              cp -R  ./cache/cache/. ./LayoutEagle/python/.layouteagle/cache/

              mkdir python/.layouteagle/prediction
              ls python/.layouteagle/

              pip install wheel
              pip install torch
              pip install -r ./python/requirements.txt
              pip install numpy --upgrade
          
              cp python/tokenization_layoutvm2_fast.py ../venv/lib/python3.8/site-packages/transformers/models/layoutlmv2/tokenization_layoutlmv2_fast.py

          '

      - name: StartBack
        run: |
          ssh staging '   screen -L  -Logfile backend.log -S backend -dm bash -c " . venv/bin/activate; cd LayoutEagle/python; python3 backend.py"  &  '
          
      - name: StartWeb
        run: |
          ssh staging '    screen  -L  -Logfile frontend.log -S frontend -dm bash -c " sleep 300 ; cd LayoutEagle/react/layout_viewer_made/ ; yarn install; yarn add --dev typescript @types/node; yarn build ; yarn run start -p 8080 "   &  '

      - name: Glance at backend logs
        run: |
          ssh staging ' cat backend.log     '

      - name: Glance at frontend logs
        run: |
          ssh staging ' cat frontend.log     '


      - name: DocTest
        run: |
          ssh staging '        
              screen -S fullend -dm bash -c "cd fullend/LayoutEagle/python; pip install -U pytest; pytest --doctest-modules"
          '
      - name: RestTest
        run: |
          echo $(curl http://$SSH_HOST:80) 
          echo $(curl -k https://$SSH_HOST:443)