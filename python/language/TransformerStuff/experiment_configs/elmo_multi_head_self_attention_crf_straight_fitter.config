local MAIN_DIM = 662;

{
  "dataset_reader": {
    "type": "conll2003",
    "tag_label": "ner",
    "coding_scheme": "BIOUL",
    "token_indexers": {
      "elmo": {
        "type": "elmo_characters"
      },
      "token_characters": {
        "type": "characters",
        "min_padding_length": 3
      }
    }
  },
  "train_data_path": "nlp/TransformerStuff/manual_corpus/train.conll3",
  "validation_data_path": "nlp/TransformerStuff/manual_corpus/test.conll3",
  "model": {
    "type": "attentive_crf_tagger",
    "label_encoding": "BIOUL",
    "constrain_crf_decoding": true,
    "calculate_span_f1": true,
    "dropout": 0.5,
    "include_start_end_transitions": false,
    "feedforward": {
         "input_dim": MAIN_DIM,
         "num_layers": 7,
         "hidden_dims": [200,200,200,200,200,200,200],
         "activations": "relu"
    },
    "text_field_embedder": {
      "token_embedders": {
          "elmo":{
                "type": "elmo_token_embedder",
            "options_file": "nlp/TransformerStuff/models/elmo_2x2048_256_2048cnn_1xhighway_options.json",
            "weight_file": "nlp/TransformerStuff/models/elmo_2x2048_256_2048cnn_1xhighway_weights.hdf5",
                "do_layer_norm": false,
                "dropout": 0.0
            },
        "token_characters": {
            "type": "character_encoding",
            "embedding": {
            	"embedding_dim": 16
            	},
            "encoder": {
            "type": "cnn",
            "embedding_dim": 16,
            "num_filters": 150,
            "ngram_filter_sizes": [4],
            "conv_layer_activation": "relu"
            }
        }
      }
    },
    "encoder": {
      "type": "multi_head_self_attention",
      "num_heads": 50,
      "input_dim": MAIN_DIM,
      "attention_dim":100,
      "values_dim":100,
      attention_dropout_prob: 0.5
    },
    "regularizer": [
      [
        "scalar_parameters",
        {
          "type": "l2",
          "alpha": 0.01
        }
      ]
    ]
  },
  "iterator": {
        "type": "basic",
        "batch_size": 64
  },
  "trainer": {
    "optimizer": {
        "type": "adam",
        "lr":    0.003
    },
    "histogram_interval":10,
    "shuffle": true,
    "validation_metric": "+f1-measure-overall",
    "num_serialized_models_to_keep": 5,
    "num_epochs": 300,
    "patience": 100,
    "cuda_device": 0
  }
}
